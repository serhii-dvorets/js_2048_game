{"version":3,"sources":["scripts/main.js"],"names":["cells","Array","from","document","querySelectorAll","board","fill","startButton","querySelector","score","messageWin","messageLose","messageStart","counter","nextMove","upMove","downMove","leftMove","rightMove","startMessage","classList","add","loseMessage","filledCells","filter","cell","length","remove","getTwoRandomNumbers","textContent","map","className","number1","number2","Math","floor","random","index","getRandomNumber","removeEventListener","number","addNumber","existingNumbers","cellIndex","push","includes","horizontalMove","direction","rightChange","leftChange","i","cell1","row","y","totalNumber","splice","unshift","emptyCells","updatedRow","concat","JSON","stringify","verticalMove","upChange","downChange","addEventListener","e","key"],"mappings":"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","file":"main.aba39707.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst cells = Array.from(document.querySelectorAll('.field-cell'));\nconst board = new Array(16).fill(0);\nconst startButton = document.querySelector('.start');\nconst score = document.querySelector('.game-score');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\nlet counter = 0;\n\nconst nextMove = {\n  upMove: true,\n  downMove: true,\n  leftMove: true,\n  rightMove: true,\n}\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.key === 'ArrowLeft') {\n    horizontalMove('left');\n  }\n\n  if (e.key === 'ArrowRight') {\n    horizontalMove('right');\n  }\n\n  if (e.key === 'ArrowUp') {\n    verticalMove('up');\n  }\n\n  if (e.key === 'ArrowDown') {\n    verticalMove('down');\n  }\n});\nstartButton.addEventListener('click', startMessage);\n\nstartButton.addEventListener('click', getTwoRandomNumbers);\n\nfunction startMessage() {\n  messageStart.classList.add('hidden');\n}\n\nfunction loseMessage() {\n  const filledCells = board.filter(cell => cell > 0);\n  if (!nextMove.downMove\n    && !nextMove.upMove\n    && !nextMove.leftMove\n    && !nextMove.rightMove && filledCells.length === 16) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction getTwoRandomNumbers() {\n  startButton.classList.add('restart');\n  startButton.textContent = 'Restart';\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n\n  cells.map(cell => {\n    cell.textContent = '';\n    cell.className = 'field-cell';\n  });\n\n  board.fill(0);\n  counter = 0;\n  score.textContent = 0;\n\n  const number1 = Math.floor(Math.random() * 16);\n  let number2;\n\n  do {\n    number2 = Math.floor(Math.random() * 16);\n  } while (number1 === number2);\n\n  cells.map((cell, index) => {\n    if (index === number1 || index === number2) {\n      board[index] = getRandomNumber();\n      cells[index].textContent = board[index];\n      cell.className = `field-cell field-cell--${+cell.textContent}`;\n    }\n  });\n\n  startButton.removeEventListener(startMessage);\n};\n\nfunction getRandomNumber() {\n  const number = Math.floor(Math.random() * 101);\n\n  if (number < 90) {\n    return 2;\n  } else {\n    return 4;\n  }\n};\n\nfunction addNumber() {\n  const existingNumbers = [];\n  let cellIndex;\n\n  board.map((cell, index) => {\n    if (cell > 0) {\n      existingNumbers.push(index);\n    }\n  });\n\n  do {\n    cellIndex = Math.floor(Math.random() * 16);\n  } while (existingNumbers.includes(cellIndex));\n\n  board[cellIndex] = getRandomNumber();\n  cells[cellIndex].textContent = board[cellIndex];\n\n  cells[cellIndex].className\n    = `field-cell field-cell--${board[cellIndex]}`;\n}\n\nfunction horizontalMove(direction) {\n  let rightChange = false;\n  let leftChange = false;\n  for (let i = 0; i < cells.length; i++) {\n    if (i % 4 === 0) {\n      const cell1 = board[i];\n      const cell2 = board[i + 1];\n      const cell3 = board[i + 2];\n      const cell4 = board[i + 3];\n      const row = [cell1, cell2, cell3, cell4];\n\n      const filledCells = row.filter(cell => cell > 0);\n      if (direction === 'left') {\n        for (let y = 1; y < filledCells.length; y++) {\n          if (filledCells[y] === filledCells[y - 1]) {\n            const totalNumber = filledCells[y] + filledCells[y - 1];\n\n            if (totalNumber === 2048) {\n              messageWin.classList.remove('hidden');\n\n              return;\n            }\n            counter += totalNumber;\n            score.textContent = counter;\n            filledCells[y - 1] = totalNumber;\n            filledCells[y] = 0;\n            filledCells.splice(y, 1);\n            filledCells.push(0);\n          }\n        }\n      } else {\n        for (let y = filledCells.length - 1; y > 0; y--) {\n          if (filledCells[y] === filledCells[y - 1]) {\n            const totalNumber = filledCells[y] + filledCells[y - 1];\n\n            if (totalNumber === 2048) {\n              messageWin.classList.remove('hidden');\n\n              return;\n            }\n            counter += totalNumber;\n            score.textContent = counter;\n            filledCells[y] = totalNumber;\n            filledCells[y - 1] = 0;\n            filledCells.splice([y - 1], 1);\n            filledCells.unshift(0);\n          }\n        }\n      }\n      const emptyCells = new Array(4 - filledCells.length).fill(0);\n      const updatedRow = direction === 'left' ? filledCells.concat(emptyCells) : emptyCells.concat(filledCells);\n\n\n      board[i] = updatedRow[0];\n      board[i + 1] = updatedRow[1];\n      board[i + 2] = updatedRow[2];\n      board[i + 3] = updatedRow[3];\n\n      cells[i].textContent = board[i];\n      cells[i + 1].textContent = board[i + 1];\n      cells[i + 2].textContent = board[i + 2];\n      cells[i + 3].textContent = board[i + 3];\n\n      cells[i].className\n        = `field-cell field-cell--${cells[i].textContent}`;\n\n      cells[i + 1].className\n        = `field-cell field-cell--${cells[i + 1].textContent}`;\n\n      cells[i + 2].className\n        = `field-cell field-cell--${cells[i + 2].textContent}`;\n\n      cells[i + 3].className\n        = `field-cell field-cell--${cells[i + 3].textContent}`;\n\n      if (JSON.stringify(row) !== JSON.stringify(updatedRow)) {\n        if (direction === 'left') {\n          leftChange = true;\n        } else {\n          rightChange = true;\n        }\n      }\n    }\n  }\n\n  if (direction === 'left') {\n    if (leftChange) {\n      nextMove.rightMove = true;\n      nextMove.leftMove = true;\n      nextMove.upMove = true;\n      nextMove.downMove = true;\n      addNumber();\n    } else {\n      nextMove.leftMove = false;\n      loseMessage();\n    }\n  } else {\n    if (rightChange) {\n      nextMove.rightMove = true;\n      nextMove.leftMove = true;\n      nextMove.upMove = true;\n      nextMove.downMove = true;\n      addNumber();\n    } else {\n      nextMove.rightMove = false;\n      loseMessage();\n    }\n  }\n}\n\nfunction verticalMove(direction) {\n  let upChange = false;\n  let downChange = false;\n  for (let i = 3; i >= 0; i--) {\n    const cell1 = board[i];\n    const cell2 = board[i + 4];\n    const cell3 = board[i + 8];\n    const cell4 = board[i + 12];\n    const row = [cell1, cell2, cell3, cell4];\n\n    const filledCells = row.filter(cell => cell > 0);\n    if (direction === 'up') {\n      for (let y = 1; y < filledCells.length; y++) {\n        if (filledCells[y] === filledCells[y - 1]) {\n          const totalNumber = filledCells[y] + filledCells[y - 1];\n\n          if (totalNumber === 2048) {\n            messageWin.classList.remove('hidden');\n\n            return;\n          }\n          counter += totalNumber;\n          score.textContent = counter;\n          filledCells[y - 1] = totalNumber;\n          filledCells[y] = 0;\n          filledCells.splice(y, 1);\n          filledCells.push(0);\n        }\n      }\n    } else {\n      for (let y = filledCells.length - 1; y > 0; y--) {\n        if (filledCells[y] === filledCells[y - 1]) {\n          const totalNumber = filledCells[y] + filledCells[y - 1];\n\n          if (totalNumber === 2048) {\n            messageWin.classList.remove('hidden');\n\n            return;\n          }\n          counter += totalNumber;\n          score.textContent = counter;\n          filledCells[y] = totalNumber;\n          filledCells[y - 1] = 0;\n          filledCells.splice([y - 1], 1);\n          filledCells.unshift(0);\n        }\n      }\n    }\n    const emptyCells = new Array(4 - filledCells.length).fill(0);\n    const updatedRow = direction === 'up' ? filledCells.concat(emptyCells) : emptyCells.concat(filledCells);\n\n\n    board[i] = updatedRow[0];\n    board[i + 4] = updatedRow[1];\n    board[i + 8] = updatedRow[2];\n    board[i + 12] = updatedRow[3];\n\n    cells[i].textContent = board[i];\n    cells[i + 4].textContent = board[i + 4];\n    cells[i + 8].textContent = board[i + 8];\n    cells[i + 12].textContent = board[i + 12];\n\n    cells[i].className\n      = `field-cell field-cell--${cells[i].textContent}`;\n\n    cells[i + 4].className\n      = `field-cell field-cell--${cells[i + 4].textContent}`;\n\n    cells[i + 8].className\n      = `field-cell field-cell--${cells[i + 8].textContent}`;\n\n    cells[i + 12].className\n      = `field-cell field-cell--${cells[i + 12].textContent}`;\n\n    if (JSON.stringify(row) !== JSON.stringify(updatedRow)) {\n\n      if (direction === 'up') {\n        upChange = true;\n      } else {\n        downChange = true;\n      }\n    }\n  }\n\n  if (direction === 'up') {\n    if (upChange) {\n      nextMove.rightMove = true;\n      nextMove.leftMove = true;\n      nextMove.upMove = true;\n      nextMove.downMove = true;\n      addNumber();\n    } else {\n      nextMove.upMove = false;\n      loseMessage();\n    }\n  } else {\n    if (downChange) {\n      nextMove.rightMove = true;\n      nextMove.leftMove = true;\n      nextMove.upMove = true;\n      nextMove.downMove = true;\n      addNumber();\n    } else {\n      nextMove.downMove = false;\n      loseMessage();\n    }\n  }\n}\n"]}